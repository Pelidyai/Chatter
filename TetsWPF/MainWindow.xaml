<Window x:Class="TetsWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TetsWPF"
        mc:Ignorable="d"
        Title="Chatter" Height="704.4" Width="504.4" Background="Transparent" AllowsTransparency="True" WindowStyle="None">
    <Window.Resources>
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FF080808</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC8C8C8</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">#99B9B9B9</Color>
        <Color x:Key="ControlMediumColor">#4440444B</Color>

        <Color x:Key="ControlPressedColor">#5540444B</Color>

        <Color x:Key="GlyphColor">#CC888EFF</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>

        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
            <Border Name="Border"  CornerRadius="5" BorderThickness="1" Background="{TemplateBinding Background}">
                <ScrollViewer x:Name="PART_ContentHost" />
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Gray"></Setter>
                                <Setter Property="Cursor" Value="IBeam"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <ControlTemplate.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="FontSize"
                                                 To="16">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger  RoutedEvent="Mouse.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="FontSize"
                                                 To="15">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" BorderThickness="3" BorderBrush="#FFBCBCBC" Background="{TemplateBinding Background}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="#9936393F"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFCECECE"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#CC888EFF"></Setter>
            <Setter Property="Background" Value="#99B9B9B9"></Setter>
        </Style>

        <Style x:Key="CrossButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="50" BorderThickness="3" BorderBrush="#FFFF0000" Background="{TemplateBinding Background}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="#FFFF0000"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFFF0000"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#CC888EFF"></Setter>
            <Setter Property="Background" Value="#AAFF0000"></Setter>
        </Style>

        <Style x:Key="LineButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="50" BorderThickness="3" BorderBrush="#FFFFFF00" Background="{TemplateBinding Background}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="#9936393F"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFFFFF00"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#CC888EFF"></Setter>
            <Setter Property="Background" Value="#AAFFFF00"></Setter>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#CC888EFF"></Setter>
            <!--<Setter Property="Foreground" Value="#FF8E9297"></Setter>-->
        </Style>
        <Style x:Key="TextBoxBase" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Background" Value="#9940444B"></Setter>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="#FFC8C8C8"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style BasedOn="{StaticResource ResourceKey=TextBoxBase}" TargetType="TextBox" x:Key="TextBoxEvented">
            <EventSetter Event="GotMouseCapture" Handler="UrlTextBox_GotMouseCapture"></EventSetter>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource WindowColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="Black" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">

                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlPressedColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="2"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                            <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
            CornerRadius="2,0,0,2"
            Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow"
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}"
       TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="Foreground" Value="#CC888EFF"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)">
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                   Style="{x:Null}"
                   Template="{StaticResource ComboBoxTextBox}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Margin="3,3,23,3"
                   Focusable="True"
                   Background="Transparent"
                   Visibility="Hidden"
                   IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                      BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="#FF50545B" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="#FFCECECE" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6"
                            SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                            <Border CornerRadius="5" BorderThickness="3" BorderBrush="#FFCECECE" Background="{TemplateBinding Background}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#FFCECECE"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                   Value="false">
                                <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                   Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                                <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="4" />
                                <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}"
       TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                Padding="2"
                SnapsToDevicePixels="true"
                Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <Border CornerRadius="40,0,40,0" BorderThickness="0" Background="#FFC8C8C8">
        <Grid Name="InnerGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,40,10,10">
            <Border CornerRadius="30" Background="White" Margin="0,-6,0,-1">
            </Border>
            <Label Name="L1" Foreground="Gray" Content="Разработчик: Пилецкий Дмитрий, PickAim" HorizontalAlignment="Left" Height="20" Margin="236,624,0,0" VerticalAlignment="Top" Width="233"/>
            <Label Name ="L2" Foreground="Gray" Content="Для связи: dima-pile@mail.ru" HorizontalAlignment="Left" Height="20" Margin="236,635,0,-1" VerticalAlignment="Top" Width="233"/>
            <Label Name="ChanelUrl" Content="Ссылка" HorizontalAlignment="Left" Margin="10,62,0,0" VerticalAlignment="Top" RenderTransformOrigin="2.469,-2.984"/>
            <TextBox Style="{ StaticResource TextBoxEvented}" Name="UrlTextBox" HorizontalAlignment="Left" Height="27" Margin="10,82,0,0" TextWrapping="Wrap" Text="https://t.me/chat_reference" VerticalAlignment="Top" Width="267" Foreground="Gray" FontSize="15" Background="#3340444B" />
            <Button Name="GetDataButton" Content="Получит данные" HorizontalAlignment="Left" Height="27" Margin="296,82,0,0" VerticalAlignment="Top" Width="173" Click="GetDataButton_Click"/>
            <CheckBox BorderThickness="2.5" Foreground="Gray" Background="Transparent" Name="checkBox1" Content="Считывать только пользователей с указанными телефонами" HorizontalAlignment="Left" Height="20" Margin="10,114,0,0" VerticalAlignment="Top" Width="459"/>
            <Label Name="StatusLabel" Content="" HorizontalAlignment="Left" Height="25" Margin="296,57,0,0" VerticalAlignment="Top" Width="173"/>
            <Label Name="DocLabel" Content="Документ с базой пользователей" HorizontalAlignment="Left" Margin="10,139,0,0" VerticalAlignment="Top" RenderTransformOrigin="2.469,-2.984"/>
            <TextBox Style="{StaticResource TextBoxBase}" Name="DocTextBox" HorizontalAlignment="Left" FontSize="15" Height="27" Margin="10,164,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="267" Background="#3340444B"/>
            <Button Name="FileButton" Content="Обзор..." HorizontalAlignment="Left" Height="27" Margin="296,164,0,0" VerticalAlignment="Top" Width="173" Click="FileButton_Click"/>
            <Label Name="Message" Content="Сообщение:" HorizontalAlignment="Left" Margin="10,196,0,0" VerticalAlignment="Top" RenderTransformOrigin="2.469,-2.984"/>
            <TextBox Style="{StaticResource TextBoxBase}" Name="MessageTextBox" HorizontalAlignment="Left" Height="175" Margin="10,217,0,0" VerticalAlignment="Top" Width="459" Background="#3340444B"/>
            <Label Name="ImageLabel" Content="Изображение" HorizontalAlignment="Left" Margin="10,407,0,0" VerticalAlignment="Top" RenderTransformOrigin="2.469,-2.984"/>
            <TextBox Style="{StaticResource TextBoxBase}" Name="ImageTextBox" HorizontalAlignment="Left" FontSize="15" Height="27" Margin="10,428,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="267" Background="#3340444B"/>
            <Button Name="ImButton" Content="Обзор..." HorizontalAlignment="Left" Height="27" Margin="296,428,0,0" VerticalAlignment="Top" Width="173" Click="ImButton_Click"/>
            <Label Name="VidLabel" Content="Видеозапись" HorizontalAlignment="Left" Margin="10,469,0,0" VerticalAlignment="Top" RenderTransformOrigin="2.469,-2.984"/>
            <TextBox Style="{StaticResource TextBoxBase}" Name="VidTextBox" HorizontalAlignment="Left" FontSize="15" Height="27" Margin="10,490,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="267" Background="#3340444B"/>
            <Button Name="VidButton" Content="Обзор..." HorizontalAlignment="Left" Height="27" Margin="296,490,0,0" VerticalAlignment="Top" Width="173" Click="VidButton_Click"/>
            <Label Name="ErrorLabel" Content="" HorizontalAlignment="Left" Margin="10,554,0,0" VerticalAlignment="Top" Width="459" FontSize="9"/>
            <Button Name="SendButton" Content="Отправить" HorizontalAlignment="Left" Height="22" Margin="10,532,0,0" VerticalAlignment="Top" Width="459" Click="SendButton_Click"/>
            <Grid Background="#FFC8C8C8" Name="ToolBar" HorizontalAlignment="Stretch" Height="24" Margin="34,-40,98,0" VerticalAlignment="Top"  MouseLeftButtonDown="ToolBar_MouseLeftButtonDown"/>
            <Grid HorizontalAlignment="Left" Height="29" Margin="409,-40,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.183,0.411">
                <Button Style="{StaticResource CrossButton}" Name="CloseButton" HorizontalAlignment="Left" Height="22" Margin="35,4,0,0" VerticalAlignment="Top" Width="24" Click="CloseButton_Click">
                    <Image Source="pack://application:,,,/Images/cross.png"></Image>
                </Button>
                <Button Style="{StaticResource LineButton}" Name="MinimizeButton" HorizontalAlignment="Left"  Height="22" Margin="9,4,0,0"  VerticalAlignment="Top" Width="23" Click="MinimizeButton_Click" >
                    <Image Source="pack://application:,,,/Images/line.png"></Image>
                </Button>
            </Grid>
            <Image Source="pack://application:,,,/Images/logo.png"  Margin="5,4,5,596"></Image>
            <Image Name ="BAIm" Source="pack://application:,,,/Images/BA.png" Margin="12,566,12,19"></Image>
            <ComboBox Name="SendTypeComboBox" HorizontalAlignment="Left" Height="25" Margin="296,134,0,0" VerticalAlignment="Top" Width="173" SelectionChanged="SendTypeComboBox_SelectionChanged">
                <ComboBoxItem IsSelected="True" >Telegram</ComboBoxItem>
                <ComboBoxItem>WhatsApp</ComboBoxItem>
            </ComboBox>
        </Grid>
    </Border>

</Window>
